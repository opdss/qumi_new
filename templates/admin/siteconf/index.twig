{% extends 'console.twig' %}

{% block console %}

    <!-- content start -->
    <div class="site-content">
        <!--<h1 class="site-h1">域名管理</h1>-->

        <!-- 数据查询条件 start -->
        <form class="layui-form">
            <div class="layui-form-item">
                <div class="layui-inline">
                    <div class="layui-input-inline">
                        <input type="text" name="kw" class="layui-input" placeholder="关键词">
                    </div>
                    <div class="layui-input-inline">
                        <button class="layui-btn"  lay-filter="btnSearch" lay-submit>查询</button>
                        <button class="layui-btn layui-btn-normal" id="btnAdd">添加配置</button>
                    </div>
                </div>
            </div>
        </form>
        <!-- 数据查询条件 end -->

        <!-- 数据表格 start -->
        <script type="text/html" id="headerToolBar">
            <div class="layui-btn-container">
                <button class="layui-btn layui-btn-sm" lay-event="batchDel">批量删除</button>
                <button class="layui-btn layui-btn-sm" lay-event="updateFile">更新配置文件</button>
            </div>
        </script>
        <table class="layui-hide" id="dataTable" lay-filter="dataTable"></table>
        <script type="text/html" id="toolBar">
            <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
        </script>
        <!-- 数据表格 end -->
    </div>
    <!-- content end -->

    <div class="modal-tpl" id="modalAdd-tpl">
        <div class="modal">
            <form class="layui-form" action="">
                <div class="layui-form-item">
                    <label class="layui-form-label">配置名称</label>
                    <div class="layui-input-block">
                        <input type="text" name="title" lay-verify="required|varchar" autocomplete="off" placeholder="配置名称" class="layui-input">
                    </div>
                </div>

                <div class="layui-form-item">
                    <label class="layui-form-label">配置key</label>
                    <div class="layui-input-block">
                        <input type="text" name="key" lay-verify="required|varchar" autocomplete="off" placeholder="配置key" class="layui-input">
                    </div>
                </div>

                <div class="layui-form-item layui-form-text">
                    <label class="layui-form-label">配置val</label>
                    <div class="layui-input-block">
                        <textarea name="val" placeholder="配置val" rows="10" lay-verify="required"  class="layui-textarea"></textarea>
                    </div>
                </div>
                <button lay-submit lay-filter="modalAdd" style="display: none" class="submit">提交</button>
            </form>
        </div>
    </div>

    <div style="display: none" id="editTheme-tpl">
        <div class="modal">
            <div class="layui-row" style="display: inline-block;">
                {% for x in themes %}
                    <div class="layui-col-md4">
                        <div class="theme-img" data-themeid="{{ x.id }}" title="{{ x.name }}">
                            <img src="{{ x.image }}" alt="{{ x.name }}" style="width: 100%">
                        </div>
                    </div>
                {% endfor %}
            </div>
        </div>
    </div>
{% endblock %}

{% block script %}
    <script type="text/javascript">
        layui.use(['layer', 'element', 'form', 'table', 'utils'], function(){
            var layer = layui.layer;
            var form = layui.form;
            var table = layui.table;
            var utils = layui.utils;
            var $ = layui.$;

            var API = {
                get : '{{ path_for('api.admin.siteconf.get') }}',
                del : '{{ path_for('api.admin.siteconf.del') }}',
                add : '{{ path_for('api.admin.siteconf.add') }}',
                update : '{{ path_for('api.admin.siteconf.update') }}',
                updateFile : '{{ path_for('api.admin.siteconf.file') }}',
            }

            table.render(layui.$.extend({
                elem: '#dataTable'
                ,url:API.get
                ,toolbar : '#headerToolBar'
                ,cols: [[
                    {type:'checkbox'}
                    ,{field:'title',  title: '配置名称', sort: true, edit:'text'}
                    ,{field:'key',  title: '配置key', sort: true}
                    ,{field:'val', title: '配置val', sort: true, edit:'text'}
                    ,{fixed:'right', title: '操作', align:'center', toolbar : '#toolBar' }
                ]]
            },utils.tableOptions));


            //监听查询条件
            form.on('submit(btnSearch)', function (data) {
                table.reload('dataTable', {
                    //重新从第 1 页开始
                    page: {curr: 1}
                    ,where: data.field
                });
                return false;
            });

            //监听排序
            table.on('sort(dataTable)', function(obj){
                table.reload('dataTable', {
                    initSort: obj //记录初始排序，如果不设的话，将无法标记表头的排序状态。 layui 2.1.1 新增参数
                    ,where: {'order_name' : obj.field, 'order_type':obj.type}
                });
            });

            //头工具栏事件
            table.on('toolbar(dataTable)', function(obj){
                var checkStatus = table.checkStatus(obj.config.id);
                var data = checkStatus.data;
                if (obj.event == 'batchDel'){
                    if (data.length == 0) {
                        layer.msg('未选中数据')
                        return false;
                    }
                    var ids = [];
                    data.forEach(function (o, i) {
                        ids.push(o.id)
                    })
                    utils.delById(API.del, ids, function (res) {
                        table.reload('dataTable');
                    })
                } else if (obj.event == 'updateFile') {
                    utils.ajax.get(API.updateFile, function (res) {
                        layer.msg('更新成功！')
                    });
                };
            });
            //监听单元格
            table.on('edit(dataTable)', function(obj){
                var value = obj.value //得到修改后的值
                    ,data = obj.data //得到所在行所有键值
                    ,field = obj.field; //得到字段
                var _data = {id: data.id}
                _data[field] = value;
                utils.ajax.post(API.update, _data, function (res) {
                    obj.update(_data);
                    layer.msg('修改成功！')
                });
            });
            //监听行工具条
            table.on('tool(dataTable)', function(obj){ //注：tool是工具条事件名，test是table原始容器的属性 lay-filter="对应的值"
                var data = obj.data; //获得当前行数据
                var layEvent = obj.event; //获得 lay-event 对应的值（也可以是表头的 event 参数对应的值）
                var tr = obj.tr; //获得当前行 tr 的DOM对象

                if(layEvent === 'del'){ //删除
                    utils.delById(API.del, data.id, function (res) {obj.del();})
                }
            });

            //自定义验证规则
            form.verify(utils.getVerifyByField(['varchar']));
            //modal表单的监听修改
            form.on('submit(modalAdd)', function (data) {
                utils.ajax.post(API.add, data.field, function (res) {
                    table.reload('dataTable');
                    layer.closeAll();
                    layer.msg('添加成功！');
                });
                return false;
            })

            $('#btnAdd').on('click', function () {
                var id = 'modalAdd';
                layer.open({
                    title:'添加系统配置',
                    id:id,
                    type : 1,
                    area : ['600px'],
                    content: $('#modalAdd-tpl').html(),
                    btn : ['确认', '取消'],
                    yes : function (index) {
                        $('#'+id).find('button.submit').trigger('click')
                    },
                    success:function () {
                        form.render()
                    }
                });
                return false;
            })
        });
    </script>
{% endblock %}