{% extends 'console.twig' %}

{% block console %}
    <!-- 数据查询条件 start -->
    <form class="layui-form">
        <div class="layui-row layui-col-space10 layui-form-item">
            <div class="layui-col-md3">
                <input type="text" name="kw" class="layui-input" placeholder="关键词">
            </div>
            <div class="layui-col-md3">
                <button class="layui-btn" lay-filter="btnSearch" lay-submit>查询</button>
                <button class="layui-btn layui-btn-normal" id="btnAdd">添加跳转</button>
            </div>
        </div>
    </form>
    <!-- 数据查询条件 end -->

    <!-- 数据表格 start -->
    <div class="layui-card">
        <div class="layui-card-header">跳转列表</div>
        <div class="layui-card-body">
            <table class="layui-hide" id="dataTable" lay-filter="dataTable"></table>
        </div>
    </div>
    <script type="text/html" id="headerToolBar">
        <div class="layui-btn-container">
            <button class="layui-btn layui-btn-sm" lay-event="batchDel">批量删除</button>
        </div>
    </script>
    <script type="text/html" id="toolBar">
        <a class="layui-btn layui-btn-danger layui-btn-xs" lay-event="del">删除</a>
    </script>
    <!-- 数据表格 end -->


    <div class="modal-tpl" id="modalAdd-tpl">
        <div class="modal">
            <form class="layui-form">
                <div class="layui-form-item">
                    <label class="layui-form-label">转发标题</label>
                    <div class="layui-input-block">
                        <input type="text" name="title" required lay-verify="required|title" autocomplete="off"
                               placeholder="转发标题" class="layui-input">
                    </div>
                </div>

                <div class="layui-form-item">
                    <label class="layui-form-label">源地址</label>
                    <div class="layui-input-inline">
                        <input type="text" name="prefix" required lay-verify="required|varchar" autocomplete="off"
                               placeholder="源地址前缀" class="layui-input">
                    </div>
                    <div class="layui-form-mid">.</div>
                    <div class="layui-input-inline">
                        <select name="domain_id" lay-search="" lay-verify="required">
                            <option value="">选择源域名</option>
                            {% for x in domains %}
                                <option value="{{ x.id }}">{{ x.name }}</option>
                            {% endfor %}
                        </select>
                    </div>
                </div>

                <div class="layui-form-item">
                    <label class="layui-form-label">目标地址</label>
                    <div class="layui-input-block">
                        <input type="text" name="redirect_url" required lay-verify="required|url" autocomplete="off"
                               placeholder="目标地址" class="layui-input">
                    </div>
                </div>

                <div class="layui-form-item">
                    <label class="layui-form-label">跳转类型</label>
                    <div class="layui-input-block">
                        <input type="radio" name="redirect_status" value="301" title="301">
                        <input type="radio" name="redirect_status" value="302" title="302" checked>
                    </div>
                </div>

                <button lay-submit lay-filter="modalAdd" style="display: none" class="submit">提交</button>
            </form>
        </div>
    </div>

{% endblock %}

{% block script %}
    <script type="text/javascript">
        layui.use(['layer', 'element', 'form', 'table', 'utils'], function () {
            var layer = layui.layer;
            var form = layui.form;
            var table = layui.table;
            var utils = layui.utils;
            var $ = layui.$;

            var API = {
                list: '{{ path_for('api.redirect.get') }}',
                del: '{{ path_for('api.redirect.del') }}',
                add: '{{ path_for('api.redirect.add') }}',
                update: '{{ path_for('api.redirect.update') }}',
            }

            table.render(layui.$.extend({
                elem: '#dataTable'
                , url: API.list
                , toolbar: '#headerToolBar'
                , cols: [[
                    {type: 'checkbox'}
                    , {field: 'title', title: '标题', sort: true, edit: 'text'}
                    , {
                        field: 'domain_name', title: '源地址', sort: true, templet: function (d) {
                            return d.prefix + '.' + d.domain_name;
                        }
                    }
                    , {field: 'redirect_url', title: '目标地址', sort: true, edit: 'text'}
                    , {field: 'redirect_status', title: '转发状态', style: 'cursor: pointer', sort: true}
                    , {field: 'clicks', title: '点击数', sort: true}
                    , {fixed: 'right', title: '操作', align: 'center', toolbar: '#toolBar'}
                ]]
            }, utils.tableOptions));

            //监听查询条件
            form.on('submit(btnSearch)', function (data) {
                table.reload('dataTable', {
                    //重新从第 1 页开始
                    page: {curr: 1}
                    , where: data.field
                });
                return false;
            });

            //监听排序
            table.on('sort(dataTable)', function (obj) { //注：tool是工具条事件名，test是table原始容器的属性 lay-filter="对应的值"
                //尽管我们的 table 自带排序功能，但并没有请求服务端。
                //有些时候，你可能需要根据当前排序的字段，重新向服务端发送请求，从而实现服务端排序，如：
                table.reload('dataTable', {
                    initSort: obj //记录初始排序，如果不设的话，将无法标记表头的排序状态。 layui 2.1.1 新增参数
                    , where: {'order_name': obj.field, 'order_type': obj.type}
                });
            });

            //头工具栏事件
            table.on('toolbar(dataTable)', function (obj) {
                var checkStatus = table.checkStatus(obj.config.id);
                var data = checkStatus.data;
                if (data.length == 0) {
                    layer.msg('未选中数据')
                    return false;
                }
                var ids = [];
                data.forEach(function (o, i) {
                    ids.push(o.id)
                })
                switch (obj.event) {
                    case 'batchDel':
                        utils.delById(API.del, ids, function (res) {
                            table.reload('dataTable');
                        })
                        break;
                }
                ;
            });
            //监听单元格
            table.on('edit(dataTable)', function (obj) {
                var value = obj.value //得到修改后的值
                    , data = obj.data //得到所在行所有键值
                    , field = obj.field; //得到字段
                var _data = {id: data.id}
                _data[field] = value;
                utils.ajax.post(API.update, _data, function (res) {
                    //同步更新表格和缓存对应的值
                    obj.update(_data);
                    layer.msg('修改成功！')
                });
            });
            //监听行工具条
            table.on('tool(dataTable)', function (obj) { //注：tool是工具条事件名，test是table原始容器的属性 lay-filter="对应的值"
                var data = obj.data; //获得当前行数据
                var layEvent = obj.event; //获得 lay-event 对应的值（也可以是表头的 event 参数对应的值）
                var tr = obj.tr; //获得当前行 tr 的DOM对象

                if (layEvent === 'del') { //删除
                    utils.delById(API.del, data.id, function (res) {
                        obj.del(); //删除对应行（tr）的DOM结构，并更新缓存
                    })
                }
            });

            layui.$('#btnAdd').on('click', function () {
                var id = 'modalAdd'
                layer.open({
                    type: 1,
                    id: id,
                    title: '添加跳转地址',
                    maxmin: true, //开启最大化最小化按钮
                    shadeClose: false,
                    shade: 0.3,
                    area: ['600px'],
                    content: layui.$('#modalAdd-tpl').html(), //注意，如果str是object，那么需要字符拼接。
                    btn: ['提交', '取消'],
                    scrollbar: false,
                    yes: function (index, layero) {
                        $('#' + id).find('button.submit').trigger('click')
                    },
                    success: function () {
                        console.log(form)
                        form.render();
                        $('#' + id).find('textarea[name=domains]').blur(function () {
                            var domains = utils.formatDomainStr($(this).val());
                            $(this).val(domains.join('\n'));
                        })
                    }
                });
                return false;
            })

            //自定义验证规则
            form.verify(utils.getVerifyByField(['title', 'varchar']));
            //modal表单的监听修改
            form.on('submit(modalAdd)', function (data) {
                utils.ajax.post(API.add, data.field, function (res) {
                    table.reload('dataTable');
                    layer.closeAll();
                    layer.msg('添加成功！');
                });
                return false;
            })
        });

    </script>
{% endblock %}